name: 
on: 
  push:
    branches:
      - 'v[0-9]+\.[0-9]+'

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write # needed for signing the images with GitHub OIDC Token

    steps:
      - name: Check Commit Message
        run: |
          if [[ "${{ github.event.head_commit.message }}" == '#NORUN'* ]]; then
            echo "Commit message starts with #NORUN. Skipping the pipeline."
            exit 0
          fi
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Run Trivy vulnerability scanner in repo mode
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          format: 'table'
          image-ref: '.'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL'
          output: 'trivy-output.txt'
          github-pat: ${{ secrets.GITHUB_TOKEN }}

      - name: Send Failure notification
        if: always() && (steps.scan.outcome == 'failure')
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_MESSAGE: 'Failed trivy scan'

      # - name: Upload Trivy scan results to GitHub Security tab
      #   uses: github/codeql-action/upload-sarif@v2
      #   with:
      #     sarif_file: 'trivy-results.sarif'
      #     github-pat: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload fail report
        if: always() && (steps.scan.outcome == 'failure')
        uses: MeilCli/slack-upload-file@v3
        with:
          slack_token: ${{ secrets.SLACK_TOKEN }}
          channel_id: ${{ secrets.SLACK_CHANNEL_ID }}
          file_path: '$PWD/trivy-output.txt'
          file_type: 'text'
          file_name: 'trivy-output.txt'
          title: 'title of file'
          initial_comment: 'post by slack-upload-file'

  dockerBuildPush:
    runs-on: ubuntu-latest
    steps:
      -
        name: Print GITHUB_SHA
        run: echo ${{ github.sha }}
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: 'wandadadada'
          password: 'dckr_pat_u0N4fTz9nQI_aO9Bco5T15hlYpg'
          # username: ${{ secrets.DOCKERHUB_USERNAME }}
          # password: ${{ secrets.DOCKERHUB_TOKEN }}

      -
        name: Build and push
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: 'wandadadada/adlc3:${{ github.sha }}'

      - name: Sign the images with GitHub OIDC Token
        env:
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
          TAGS: 'wandadadada/adlc3:${{ github.sha }}'
        run: cosign sign --yes "${TAGS}@${DIGEST}"

  # new_push_job:
  #   runs-on: ubuntu-latest
    # name: New push to repo
    # steps:

      - uses: MeilCli/slack-upload-file@v3
        with:
          slack_token: ${{ secrets.SLACK_TOKEN }}
          channel_id: "test-submission"
          file_path: 'docs/*.json'
          initial_comment: 'post by slack-upload-file'
          # thread_ts: 'option'
      # - name: Send GitHub trigger payload to Slack Workflow Builder
      #   id: slack
      #   uses: slackapi/slack-github-action@v1.24.0
      #   with:
      #     payload: |
      #       {
      #         "text": "GitHub Action build result: ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}",
      #         "blocks": [
      #           {
      #             "type": "section",
      #             "text": {
      #               "type": "mrkdwn",
      #               "text": "GitHub Action build result: ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}"
      #             }
      #           }
      #         ]
      #       }
      #   env:
      #     SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      #     SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK

      # - id: slack_2
      #   uses: slackapi/slack-github-action@v1.24.0
      #   with:
      #     # The following message update step does not accept a channel name.
      #     # Setting a channel ID here for consistency is highly recommended.
      #     channel-id: "CHANNEL_ID"
      #     payload: |
      #       {
      #         "text": "Deployment started (In Progress)",
      #         "attachments": [
      #           {
      #             "pretext": "Deployment started",
      #             "color": "dbab09",
      #             "fields": [
      #               {
      #                 "title": "Status",
      #                 "short": true,
      #                 "value": "In Progress"
      #               }
      #             ]
      #           }
      #         ]
      #       }
      #   env:
      #     SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL}}
      #     SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK

      # - uses: slackapi/slack-github-action@v1.24.0
      #   with:
      #     # Unlike the step posting a new message, this step does not accept a channel name.
      #     # Please use a channel ID, not a name here.
      #     channel-id: "CHANNEL_ID"
      #     update-ts: ${{ steps.slack.outputs.ts }}
      #     payload: |
      #       {
      #         "text": "Deployment finished (Completed)",
      #         "attachments": [
      #           {
      #             "pretext": "Deployment finished",
      #             "color": "28a745",
      #             "fields": [
      #               {
      #                 "title": "Status",
      #                 "short": true,
      #                 "value": "Completed"
      #               }
      #             ]
      #           }
      #         ]
      #       }
      #   env:
      #     SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL}}       
      #     SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK   




      - name: Send Success Slack Notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_CHANNEL: general
          SLACK_COLOR: ${{ job.status }} # or a specific color like 'good' or '#ff00ff'
          SLACK_ICON: https://github.com/rtCamp.png?size=48
          SLACK_MESSAGE: 'Post Content :rocket:'
          SLACK_TITLE: Post Title
          SLACK_USERNAME: rtCamp
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}


